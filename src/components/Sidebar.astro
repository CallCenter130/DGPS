---
// src/components/Sidebar.astro
import Link from './Link.astro';

const pathname = new URL(Astro.request.url).pathname;
const base = import.meta.env.BASE_URL;

const menuItems = [
    { name: 'Inicio', url: '', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>' },
    { name: 'Riesgo Psicosocial', url: '/RiesgoPsicosocial', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M9 8h6M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>' },
    // Asegúrate de que todas tus URLs terminan con una barra `/` para consistencia
    { name: 'Conéctate', url: '/conectate', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>' },
];

// Construye la URL completa para el logo, incluyendo el ?embed=true
const logoHref = `${base}?embed=true`;
---

<!-- 
  Contenedor principal que se conecta al estado 'sidebarState' de Alpine.js.
  El estado se define en la etiqueta <script> de abajo.
-->
<div x-data="sidebarState" x-cloak>

    <!-- Overlay para cerrar el menú en móvil -->
    <div 
        x-show="isSidebarOpen" 
        @click="isSidebarOpen = false"
        class="fixed inset-0 bg-black bg-opacity-50 z-20 md:hidden"
        x-transition.opacity
    ></div>

    <!-- El Sidebar en sí -->
    <aside class="fixed md:relative inset-y-0 left-0 bg-primary text-gray-200 flex flex-col transition-transform md:transition-all duration-300 ease-in-out z-30"
        :class="{'w-64': isSidebarOpen, 'w-20': !isSidebarOpen,'translate-x-0': isSidebarOpen, '-translate-x-full md:translate-x-0': !isSidebarOpen}">
        <!-- Encabezado del Sidebar -->
        <div class="flex items-center justify-between flex-shrink-0 h-20 px-4 border-b border-gray-700">
            <a href={logoHref} class="flex items-center space-x-2 overflow-hidden" :class="isSidebarOpen ? '' : 'w-full justify-center'">
                 <img src=`${base}images/logo.svg` alt="Logo DGPS" class="h-10 w-10 flex-shrink-0" />
                 <span x-show="isSidebarOpen" class="font-display font-bold text-xl whitespace-nowrap">DGPS</span>
            </a>
            <button id="sidebar-toggle-button" @click="isSidebarOpen = !isSidebarOpen" class="p-2 rounded-md hover:bg-gray-700 hidden md:block">
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
            </button>
        </div>

        <!-- Navegación -->
        <nav class="flex-grow overflow-y-auto mt-4">
            {menuItems.map(item => {
                const itemFullPath = new URL(item.url, new URL(base, Astro.site)).pathname;
                let isActive = false;
                if (item.url === '') {
                    isActive = pathname === base;
                } else {
                    isActive = pathname.startsWith(itemFullPath);
                }

                return (
                    <Link 
                        href={item.url} 
                        embed={true}
                        title={item.name} 
                        class:list={[
                            "flex items-center py-3 px-6 transition-colors duration-200",
                            isActive ? "bg-accent/20 text-white" : "text-gray-400 hover:bg-gray-700 hover:text-white"
                        ]}
                    >
                        <svg class="h-6 w-6 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5" set:html={item.icon} />
                        <span class="ml-4 font-semibold whitespace-nowrap" x-show="isSidebarOpen" x-transition>{item.name}</span>
                    </Link>
                )
            })}
        </nav>
    </aside>
</div>

<!-- 
  Script para inicializar el estado de Alpine.js de forma segura en el cliente,
  evitando errores de 'window is not defined' durante el build de Astro.
-->
<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('sidebarState', () => ({
            isSidebarOpen: window.innerWidth >= 768,
        }))
    })
</script>