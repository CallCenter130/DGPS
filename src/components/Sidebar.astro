---
import { formatUrl } from '../utils/url.ts';
const pathname = new URL(Astro.request.url).pathname;

// He añadido todos los enlaces del menú con sus iconos. ¡Revisa los 'url' e 'icon'!
const menuItems = [
    { name: 'Inicio', url: '/', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>' },
    { name: 'Riesgo Psicosocial', url: '/riesgo-psicosocial', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M9 8h6M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>' },
    { name: 'Sistema SNNAT', url: '/sistema-snnat', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>' },
    { name: 'Seguridad y Salud Ocupacional', url: '/sso', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 20.944A12.02 12.02 0 0012 22.47a12.02 12.02 0 009-1.526 11.955 11.955 0 01-2.382-3.04z"/>' },
    { name: 'Peritos', url: '/peritos', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z M9 14.25V9.75M8 12h.01M5 12h.01M19 12h.01M16 12h.01M2 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>' },
    { name: 'Generadores de Vapor', url: '/generadores-vapor', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7.014A8.003 8.003 0 0112 3c2.757 0 5.223 1.28 6.986 3.286C21.5 8 22 11 22 13c0 1-1.007 3-1.007 3s1.007-2 1.007-3c0-2-1-4-1-4-2.121-2.121-4.95-3.286-7.986-3.286a9.962 9.962 0 00-7.014 2.986C4.5 9 4 11 4 13c0 2 .5 5 2.986 7.014a9.962 9.962 0 007.014 2.986c2.757 0 5.223-1.28 6.986-3.286z"/>' },
    { name: 'Formación', url: '/formacion', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5-1.253"/>' },
    { name: 'Conéctate', url: '/conectate', icon: '<path stroke-linecap="round" stroke-linejoin="round" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>' },
];
---

<!-- Overlay oscuro para móvil -->
<div 
    x-show="isSidebarOpen" 
    @click="isSidebarOpen = false"
    class="fixed inset-0 bg-black bg-opacity-50 z-20 md:hidden"
    x-transition:enter="transition-opacity ease-linear duration-300"
    x-transition:enter-start="opacity-0"
    x-transition:leave="transition-opacity ease-linear duration-300"
    x-transition:leave-end="opacity-0"
></div>

<!-- El Sidebar en sí -->
<aside 
    class="fixed inset-y-0 left-0 bg-primary text-gray-200 w-64 p-4 transform transition-transform duration-300 ease-in-out z-30
           md:relative md:translate-x-0"
    :class="isSidebarOpen ? 'translate-x-0' : '-translate-x-full'"
>
    <!-- Encabezado del Sidebar (solo para móvil) -->
    <div class="flex items-center justify-between h-16 border-b border-gray-700 md:hidden">
        <a href={formatUrl('/?embed=true')} class="flex items-center space-x-2">
             <img src={`${import.meta.env.BASE_URL.replace(/\/$/, '')}/images/logo.svg`} alt="Logo DGPS" class="h-8 w-8" />
             <span class="font-display font-bold text-lg">DGPS</span>
        </a>
        <button @click="isSidebarOpen = false" class="p-2">
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/></svg>
        </button>
    </div>
    
    <nav class="mt-8">
        {menuItems.map(item => {
            const itemUrl = formatUrl(item.url + (item.url.includes('?') ? '&' : '?') + 'embed=true');
            let isActive = pathname.startsWith(itemUrl.split('?')[0]);
            if (item.url === '/') {
                isActive = pathname === itemUrl.split('?')[0];
            }
            return (
                <a href={itemUrl} title={item.name} class="flex items-center py-3 px-4 rounded-md transition-colors duration-200"
                    class:list={[isActive ? "bg-accent/20 text-white" : "text-gray-400 hover:bg-gray-700 hover:text-white"]}>
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5" set:html={item.icon} />
                    <span class="ml-4 font-semibold">{item.name}</span>
                </a>
            )
        })}
    </nav>
</aside>