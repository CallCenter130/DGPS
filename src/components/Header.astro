---
import { formatUrl } from '../utils/url.ts';
const pathname = new URL(Astro.request.url).pathname;

const menuItems = [
    { name: 'Inicio', url: '/' },
    { name: 'Riesgo Psicosocial', url: '/RiesgoPsicosocial' },
    { name: 'Sistema SNNAT', url: '/sistema-snnat' },
    { name: 'Seguridad y Salud Ocupacional', url: '/sso' },
    { name: 'Peritos', url: '/peritos' },
    { name: 'Generadores de Vapor', url: '/generadores-vapor' },
];
---
<header x-data="{ mobileMenuOpen: false }" class="bg-primary text-white shadow-md sticky top-0 z-50">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-20">

            <a href={formatUrl('/')} class="flex-shrink-0">
                <img src={`${import.meta.env.BASE_URL.replace(/\/$/, '')}/images/logomtps.svg`} alt="Logo de DGPS Consultores" class="h-12 w-auto transition-transform duration-300 hover:scale-105" />
            </a>

            <nav class="hidden md:flex items-center space-x-6">
                {menuItems.map(item => {
                    const itemUrl = formatUrl(item.url);
                    let isActive = false;
                    if (item.url === '/') {
                        isActive = pathname === itemUrl;
                    } else {
                        isActive = pathname.startsWith(itemUrl);
                    }
                    return (
                        <a 
                            href={itemUrl}
                            class:list={[
                                "text-sm font-semibold uppercase tracking-wide transition-colors duration-300",
                                isActive ? "text-accent" : "hover:text-accent"
                            ]}
                        >
                            {item.name}
                        </a>
                    )
                })}
            </nav>

            <div class="hidden md:flex items-center space-x-4">
                 <a href={formatUrl('/conectate')} class="bg-accent text-primary font-bold py-2 px-4 rounded-md hover:bg-yellow-600 transition-colors duration-300">
                    Conéctate
                </a>
            </div>

            <div class="md:hidden flex items-center">
                <button @click="mobileMenuOpen = !mobileMenuOpen" class="inline-flex items-center justify-center p-2 rounded-md">
                    <svg x-show="!mobileMenuOpen" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-4 6h4" /></svg>
                    <svg x-show="mobileMenuOpen" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
                </button>
            </div>

        </div>
    </div>

    <!-- Panel Menú Móvil -->
    <div x-show="mobileMenuOpen" x-transition class="md:hidden">
        {/* ... (Aquí también se podría aplicar la misma lógica para el menú móvil) ... */}
    </div>
</header>